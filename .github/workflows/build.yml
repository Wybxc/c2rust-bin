name: Build and Release

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          asset_postfix: linux-amd64
        # - os: windows-latest
        #   artifact_name: c2rust.exe
        #   asset_postfix: windows-amd64.exe
        - os: macos-latest
          asset_postfix: darwin-amd64
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup rust toolchain
      run: |
        rustup default nightly
        rustup component add rust-src rustc-dev llvm-tools-preview

    - name: Setup rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: ""

    - name: Install dependencies (Ubuntu)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential llvm clang libclang-14-dev cmake libssl-dev pkg-config python3 git
        echo "LLVM_CONFIG_PATH=/usr/bin/llvm-config-14" >> $GITHUB_ENV
    
    - name: Install dependencies (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install llvm python3 cmake openssl
        echo "LLVM_CONFIG_PATH=/opt/homebrew/opt/llvm/bin/llvm-config" >> $GITHUB_ENV

    - name: Build
      run: |
        cargo install --git https://github.com/immunant/c2rust.git c2rust c2rust-analyze c2rust-instrument c2rust-pdg --locked --root dist
        tar -cf c2rust-${{ matrix.asset_postfix }}.tar dist/bin/*
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: c2rust-${{ matrix.asset_postfix }}
        path: c2rust-${{ matrix.asset_postfix }}.tar
        if-no-files-found: error
  
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Revision
      id: revision
      run: |
        revision=$(curl -s https://api.github.com/repos/immunant/c2rust/commits/master | jq -r .sha)
        time=$(date -u +"%Y-%m-%d-%H-%M-%S")
        echo "revision=$revision" >> $GITHUB_OUTPUT
        echo "tag=nightly-$time" >> $GITHUB_OUTPUT
    
    - name: Commit changes
      run: |
        sed -i 's/^Last build:.*$/Last build: ${{ steps.revision.outputs.revision }}/' README.md
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add README.md
        git commit -m "Last build: ${{ steps.revision.outputs.revision }}"
        git tag -a ${{ steps.revision.outputs.tag }} -m "Last build: ${{ steps.revision.outputs.revision }}"
        git push

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        pattern: c2rust-*
        path: dist
        merge-multiple: true
    
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        fail_on_unmatched_files: true
        tag_name: ${{ steps.revision.outputs.tag }}
        body: ${{ steps.revision.outputs.revision }}
